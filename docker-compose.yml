---
version: "3.1"
services:
  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=999
      - TZ=America/Chicago
    volumes:
      - type: bind
        source: ~/appdata/heimdall/config/
        target: /config
    networks:
      - network
    ports:
      - 85:80
      - 443:443
    restart: unless-stopped

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=999
      - TZ=America/Chicago
      - JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
    volumes:
      - type: bind
        source: ~/appdata/jellyfin/library/
        target: /config
      - type: bind
        source: ~/appdata/jellyfin/tvseries/
        target: /data/tvshows
      - type: bind
        source: ~/appdata/jellyfin/movies/
        target: /data/movies
    networks:
      - network
    ports:
      - 8096:8096
    restart: unless-stopped

  yacht:
    image: selfhostedpro/yacht:latest
    container_name: yacht
    volumes:
      - type: bind
        source: ~/appdata/yacht/
        target: /config
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - network
    ports:
      - 8000:8000
    restart: unless-stopped

  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    environment:
      - PUID=1000
      - PGID=999
      - TZ=America/Chicago
    volumes:
      - type: bind
        source: ~/appdata/deluge/config/
        target: /config
      - type: bind
        source: ~/Downloads/
        target: /downloads
    networks:
      - network
    ports:
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=999
      - TZ=America/Chicago
    volumes:
      - type: bind
        source: ~/appdata/radarr/config/
        target: /config
      - type: bind
        source: ~/appdata/jellyfin/movies/
        target: /movies
      - type: bind
        source: ~/Downloads
        target: /downloads
    networks:
      - network
    ports:
      - 7878:7878
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=999
      - TZ=America/Chicago
    volumes:
      - type: bind
        source: ~/appdata/sonarr/config/
        target: /config
      - type: bind
        source: ~/appdata/jellyfin/tvseries
        target: /tv
      - type: bind
        source: ~/Downloads
        target: /downloads
    networks:
      - network
    ports:
      - 8989:8989
    restart: unless-stopped

  homeassistant:
    image: lscr.io/linuxserver/homeassistant
    container_name: homeassistant
    environment:
      - PUID=1000
      - PGID=999
      - TZ=America/Chicago
    volumes:
      - type: bind
        source: ~/appdata/homeassistant/
        target: /config
    networks:
      - network
    ports:
      - 8123:8123
    restart: unless-stopped

  uptime-kuma:
    image: louislam/uptime-kuma:alpine
    container_name: uptime-kuma
    volumes:
      - type: bind
        source: ~/appdata/uptime-kuma/
        target: /app/data
    networks:
      - network
    ports:
      - 3001:3001
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    volumes:
      - type: bind
        source: ~/appdata/portainer/
        target: /data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - network
    ports:
      - 9443:9443
    restart: unless-stopped

  cloudflare:
    image: cloudflare/cloudflared:latest
    container_name: cloudflare-tunnel
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN} # Stored in .env at top-level directory
    restart: unless-stopped

  guacamole:
    image: abesnier/guacamole
    container_name: guacamole
    volumes:
      - type: bind
        source: ~/appdata/guacamole/config/
        target: /config
    networks:
      - network
    ports:
      - 8181:8080
    restart: unless-stopped

  dashy:
    image: lissy93/dashy
    container_name: Dashy
    volumes:
      - type: bind
        source: ~/appdata/dashy/config.yml
        target: /app/public/conf.yml
    environment:
      - NODE_ENV=production
      - UID=1000
      - GID=999
    networks:
      - network
    ports:
      - 4000:80
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  gitlab:
    image: 'gitlab/gitlab-ee:latest'
    hostname: 'gitlab.dancard32.com'
    container_name: gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://gitlab.example.com'
    # Add any other gitlab.rb configuration here, each on its own line
    networks:
      - network
    ports:
      - '80:80'
      - '443:443'
      - '22:22'
    volumes:
      - '$GITLAB_HOME/config:/etc/gitlab'
      - '$GITLAB_HOME/logs:/var/log/gitlab'
      - '$GITLAB_HOME/data:/var/opt/gitlab'
    shm_size: '256m'

    restart: unless-stopped

# Statically setting the IP Gateway to prevent changing IP for cloudflare
networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.255.0/24
          gateway: 172.21.255.1


  #pihole:
  #  image: pihole/pihole:latest
  #  container_name: pihole
  #  environment:
  #    TZ: America/Chicago
  #    WEBPASSWORD: asdf
  #  volumes:
  #    - ~/appdata/pi-hole/:/etc/pihole
  #    - ~/appdata/pi-hole/dns-masq.d/:/etc/dnsmasq.d
  #
  #  ports:
  #    - 53:53/tcp
  #    - 53:53/udp
  #   - 8081:80/tcp

  #  restart: unless-stopped

  #nut-upsd:
  #  image: instantlinux/nut-upsd
  #  ports:
  #    - 3493:3493
  #  environment:
  #    - SERIAL=abcdef123456
  #  secrets:
  #    - nut-upsd-password
  #  devices:
  #    - /dev/usb/hiddev0:/dev/usb/hiddev0
  #  privileged: true
  #  restart: unless-stopped

  #cloudflare-ddns:
  #  image: oznu/cloudflare-ddns:latest
  #  restart: always
  #  environment:
  #    - API_KEY=xxxxxxx
  #    - ZONE=example.com
  #    - SUBDOMAIN=subdomain
  #    - PROXIED=false

  #image: nginx
  #  volumes:
  #  - ./templates:/etc/nginx/templates
  #  ports:
  #  - "8080:80"
  #  environment:
  #  - NGINX_HOST=foobar.com
  #  - NGINX_PORT=80
